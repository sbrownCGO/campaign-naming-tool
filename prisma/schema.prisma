// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  campaigns     Campaign[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// Campaign-related models
enum CampaignScope {
  Global
  Local
  International
}

enum CampaignTopic {
  Life
  Family_Education
  Freedom
  Patriotism
  Election_Season
  Others
}

enum CampaignType {
  MD_Fundraiser
  OTD_Fundraiser
  Other
}

enum CampaignStatus {
  pending
  created
  failed
  completed
}

model Campaign {
  id                   String         @id @default(cuid())
  marketoName          String         @unique
  displayName          String
  
  // Form data
  listAcronym          String
  countryCode          String?
  scope                CampaignScope
  topic                CampaignTopic
  petitionId           String?
  campaignTitle        String
  globalCampaign       String?
  campaignType         CampaignType
  
  // Metadata
  createdBy            String
  user                 User           @relation(fields: [createdBy], references: [id])
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  
  // Integration IDs
  iterableCampaignId   String?
  asanaTaskId          String?
  
  // Status tracking
  status               CampaignStatus @default(pending)
  errorMessage         String?
  
  // UTM parameters
  utmSource            String?
  utmMedium            String?
  utmCampaign          String?

  @@map("campaigns")
}

model ListOption {
  id           String  @id @default(cuid())
  code         String  @unique
  displayName  String
  countryCode  String?
  active       Boolean @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("list_options")
}
